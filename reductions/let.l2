(** Returns a list with mapper applied to each element.
(function map (l mapper)
	(with return
		{(continuation aux (in out)
			(if [nil? [' in]]
				{return [reverse [' out]]}
				{aux [rst [' in]] [lst [[' mapper] [fst [' in]]] [' out]]})) [' l] [nil]})))

(function let (l)
	(`(with return
		(,[llst (` jump) (`(continuation templet0
			(,[map [fst [' l]] fst])
			{return (,[frst [' l]])})) [map [fst [' l]] frst]]))))
