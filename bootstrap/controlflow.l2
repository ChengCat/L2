(function reverse (l)
	(with return
		{(continuation _ (l reversed)
			(if [sexpr= $l [nil]]
				{return $reversed}
				{_ [rst $l] [lst [fst $l] $reversed]})) $l [nil]}))

(** Returns a list with mapper applied to each element.
(function map (l mapper)
	(with return
		{(continuation aux (in out)
			(if [sexpr= $in [nil]]
				{return [reverse $out]}
				{aux [rst $in] [lst [$mapper [fst $in]] $out]})) $l [nil]})))

(function let (l)
	(`(with return
		(,[llst `jump (`(continuation templet0
			(,[map [rst [reverse $l]] fst])
			{return (,[fst [reverse $l]])})) [map [rst [reverse $l]] frst]]))))

(function switch (l)
	(`(let (tempeq0 (,[fst $l])) (tempval0 (,[frst $l]))
		(,(with return
			{(continuation aux (remaining else-clause)
				(if [sexpr= $remaining [nil]]
					{return $else-clause}
					{aux [rst $remaining]
						(`(if (,[llllst `invoke `$tempeq0 `$tempval0 [ffst $remaining] [nil]])
							(,[frfst $remaining]) ,$else-clause))}))
				[rst [reverse [rrst $l]]] [fst [reverse $l]]})))))
